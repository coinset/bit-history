name: release

on:
  push:
    branches:
      - dev
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        deno: [1.16.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno }}

      - name: test
        run: deno test -A

  release:
    needs: [test]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=name::${GITHUB_REF#refs/heads/}"
        id: branch

      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ steps.branch.outputs.name }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.23.6
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline, --ignore-scripts]

      - name: cdk diff
        run: |
          cd app
          pnpm cdk -c environment=${{ steps.branch.outputs.name }} diff
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', steps.string.outputs.uppercase )] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', steps.string.outputs.uppercase )] }}
          AWS_DEFAULT_REGION: ap-northeast-1

      - name: Deploy
        run: |
          cd app
          pnpm cdk deploy -c environment=${{ steps.branch.outputs.name }} --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', steps.string.outputs.uppercase )] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', steps.string.outputs.uppercase )] }}
          AWS_DEFAULT_REGION: ap-northeast-1

